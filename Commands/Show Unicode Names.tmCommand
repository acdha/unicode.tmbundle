<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/python
# encoding: utf-8

import unicodedata
import sys
import re
import os
import codecs

sys.stdout = codecs.getwriter('utf-8')(sys.stdout)
sys.stdin  = codecs.getreader('utf-8')(sys.stdin)

bundleLibPath = os.environ["TM_BUNDLE_PATH"] + "/Support/lib/"

def lastCharInUCSdec(s):
    if s:
        if u"\udc00" &lt;= s[-1] &lt;= u"\udfff" and len(s) &gt;= 2 and u"\ud800" &lt;= s[-2] &lt;= u"\udbff":
            return ((ord(s[-2])&amp;0x3ff)&lt;&lt;10 | (ord(s[-1])&amp;0x3ff)) + 0x10000
        return ord(s[-1])
    return -1

def codepoints(s):
    hs = 0
    for c in s:
        c = ord(c)
        if 0xdc00 &lt;= c &lt;= 0xdfff and hs:
            yield ((hs&amp;0x3ff)&lt;&lt;10 | (c&amp;0x3ff)) + 0x10000
            hs = 0
        elif 0xd800 &lt;= c &lt;= 0xdbff:
            hs = c
        else:
            yield c
    if hs:
        yield hs

def getUnicodeName(dec):
    lastCharUCShexCode = "%04X" % dec
    inp, out = os.popen2("zgrep '^" + lastCharUCShexCode + "' '" + bundleLibPath + "UnicodeData.txt.zip'")
    inp.close()
    UnicodeData = unicode(out.read(), "UTF-8")
    out.close()
    name = ""
    if len(UnicodeData) == 0:
        if 0x3400 &lt;= dec &lt;= 0x4DB5:
            name = "CJK Ideograph Extension A : U+" + lastCharUCShexCode
        elif 0x4E00 &lt;= dec &lt;= 0x9FC3:
            name = "CJK Ideograph : U+" + lastCharUCShexCode
        elif 0xAC00 &lt;= dec &lt;= 0xD7A3: # Hangul
            name = unicodedata.name(char, "U+%04X" % ord(char))
        elif 0xD800 &lt;= dec &lt;= 0xDB7F:
            name = "Non Private Use High Surrogate : U+" + lastCharUCShexCode
        elif 0xDB80 &lt;= dec &lt;= 0xDBFF:
            name = "Private Use High Surrogate : U+" + lastCharUCShexCode
        elif 0xDC00 &lt;= dec &lt;= 0xDFFF:
            name = "Low Surrogate : U+" + lastCharUCShexCode
        elif 0xE000 &lt;= dec &lt;= 0xF8FF:
            name = "Private Use : U+" + lastCharUCShexCode
        elif 0x20000 &lt;= dec &lt;= 0x2A6D6:
            name = "CJK Ideograph Extension B : U+" + lastCharUCShexCode
        elif 0xF0000 &lt;= dec &lt;= 0xFFFFD:
            name = "Plane 15 Private Use : U+" + lastCharUCShexCode
        elif 0x100000 &lt;= dec &lt;= 0x10FFFD:
            name = "Plane 16 Private Use : U+" + lastCharUCShexCode
    else:
        name = UnicodeData.strip().split(';')[1]
    return name

if "TM_SELECTED_TEXT" in os.environ:
    cnt = 0
    for c in codepoints(unicode(os.environ["TM_SELECTED_TEXT"], "UTF-8")):
         cnt += 1
         if cnt &gt; 50:
             print "... displays only the first 50 characters"
             sys.exit(206)
         if c != 10:
             char = eval('u"\U' + "%08X" % c + '"')
             lastCharUCShexCode = "%04X" % c
             if c == 9:
                 res = u"%s: U+%s" % (char, lastCharUCShexCode)
             else:
                 res = u"%s\t: U+%s" % (char, lastCharUCShexCode)
             name = getUnicodeName(c)
             if len(name) &gt; 0:
                 res += u"\t: %s" % name
             print res
else:
    line, x = os.environ["TM_CURRENT_LINE"], int(os.environ["TM_LINE_INDEX"])
    lastCharDecCode = lastCharInUCSdec(unicode(line[:x], "UTF-8"))
    char = eval('u"\U' + "%08X" % lastCharInUCSdec(unicode(line[:x], "UTF-8")) + '"')
    lastCharUCShexCode = "%04X" % lastCharDecCode
    if len(char) == 0:
        sys.exit(200)
    res = u"%s : U+%s" % (char, lastCharUCShexCode)
    name = getUnicodeName(lastCharDecCode)
    if len(name) &gt; 0:
        res += u" : %s" % name
    print res

</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^~@u</string>
	<key>name</key>
	<string>Show Unicode Name(s)</string>
	<key>output</key>
	<string>showAsTooltip</string>
	<key>uuid</key>
	<string>13FB5612-63F9-4FE5-B43C-ACB0E45B7386</string>
</dict>
</plist>
